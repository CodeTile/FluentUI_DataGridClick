@page "/"

@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<FluentPaginator State="@pagination" SummaryTemplate="@template" />

<FluentDataGrid Items="@Data" Pagination="@pagination"
                ShowHover="true"
    >
    <PropertyColumn Property="@(p => p.PersonId)" Sortable="true" />
    <PropertyColumn Property="@(p => p.Name)" Sortable="true" />
    <PropertyColumn Property="@(p => p.BirthDate)" Format="yyyy-MM-dd" Sortable="true" />
</FluentDataGrid>

<FluentPaginator State="@pagination" />
<FluentLabel>@hoverText</FluentLabel>
@code {
    PaginationState pagination = new PaginationState() { ItemsPerPage = 25 };

    record Person(int PersonId, string Name, DateOnly BirthDate);

    protected override void OnInitialized()
    {
        Data = GeneratePeople(100).AsQueryable();
    }

    IQueryable<Person> Data;

    private RenderFragment template = @<span />;

    string hoverText = "??????????????????";
    static List<Person> GeneratePeople(int count)
    {
        var random = new Random();
        var people = new List<Person>();
        string[] firstNames = { "Alice", "Bob", "Charlie", "Diana", "Ethan", "Fiona", "George", "Hannah", "Ian", "Julia", "Kevin", "Laura", "Michael", "Nina", "Oscar", "Paula", "Quentin", "Rachel", "Steven", "Tina" };
        string[] lastNames = { "Smith", "Johnson", "Williams", "Brown", "Jones", "Garcia", "Miller", "Davis", "Rodriguez", "Martinez" };

        for (int i = 1; i <= count; i++)
        {
            string firstName = firstNames[random.Next(firstNames.Length)];
            string lastName = lastNames[random.Next(lastNames.Length)];
            string fullName = $"{firstName} {lastName}";

            // Birthdate between 1970 and 2005
            int year = random.Next(1970, 2006);
            int month = random.Next(1, 13);
            int day = random.Next(1, DateTime.DaysInMonth(year, month) + 1);

            var birthDate = new DateOnly(year, month, day);

            people.Add(new Person(i, fullName, birthDate));
        }

        return people;
    }
}
